from sys import stdin
from collections import deque
input = stdin.readline

n = int(input())
arr = [list(map(int, input().split())) for _ in range(n)]
dx = [0, 1, 1]
dy = [1, 1, 0]
ans = 0

def dfs(x, y, direction, depth):
    global ans

    if x==n-1 and y==n-1:
        ans += 1
        visited[x][y] = 0
        return

    for k in range(3):
        if abs(direction-k)>1: continue

        if k==1:
            if not (0<=x+dx[0]<n and 0<=y+dy[0]<n and arr[x+dx[0]][y+dy[0]]==0): continue
            if not (0<=x+dx[2]<n and 0<=y+dy[2]<n and arr[x+dx[2]][y+dy[2]]==0): continue

        if 0<=x+dx[k]<n and y+dy[k]<n and visited[x+dx[k]][y+dy[k]]==0 and arr[x+dx[k]][y+dy[k]]==0:
            visited[x+dx[k]][y+dy[k]] = 1
            dfs(x+dx[k], y+dy[k], k, depth + 1)
            visited[x+dx[k]][y+dy[k]] = 0

    return

visited = [[0 for _ in range(n)] for _ in range(n)]

visited[0][1] = 1
dfs(0, 1, 0, 0)

print(ans)
